name: Bygg og deploy til prod og dev

# ------------------------------------------------------------
# Denne workflowen bygger en Java-applikasjon, pusher docker-image til GAR og
# deployerer det hele til prod og dev i parallell.
#
# Det ferdige imaget blir analysert av Trivy for sårbarheter.
# 
# Det er påkrevd at kallende GitHub Actions-jobb setter følgende rettigheter:
#
# permissions:
#   id-token: "write"         # Kreves av nais/login
#   contents: "write"         # Kreves for å skrive sårbarhetsanalyse-rapport
#   security-events: "write"  # Kreves for å pushe resultat av sårbarhetsanalyse til Github Security
# ------------------------------------------------------------

on:
  workflow_call:
    inputs:
      prod-cluster:
        description: 'Prod-cluster det skal deployes til'
        type: string
        required: true
      prod-manifest:
        description: 'Stil til Nais-manifestet for prod'
        type: string
        required: true
      dev-cluster:
        description: 'Dev-cluster det skal deployes til'
        type: string
        required: true
      dev-manifest:
        description: 'Sti til Nais-manifestet for dev'
        type: string
        required: true

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  build:
    name: Bygg, test og last opp docker-image
    runs-on: ubuntu-latest
    timeout-minutes: 7
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Sett opp JDK21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'

      - name: Sett opp Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Test, bygg og generer SBOM
        run: ./gradlew test bootJar -PskipLint

      - name: Last opp docker-image
        uses: nais/docker-build-push@v0
        id: docker-push
        with:
          team: tilleggsstonader
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          byosbom: build/reports/application.cdx.json
      - name: Post build failures to Slack
        if: failure()
        run: |
          curl -X POST --data "{\"text\": \"Build av $GITHUB_REPOSITORY feilet - $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID\"}" $WEBHOOK_URL
        env:
          WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    outputs:
      image: ${{ steps.docker-push.outputs.image }}

  deploy_dev:
    name: Deploy til ${{ inputs.dev-cluster }}
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 6
    steps:
      - uses: actions/checkout@v4

      - name: Deploy til ${{ inputs.dev-cluster }}
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: ${{ inputs.dev-cluster }}
          RESOURCE: ${{ inputs.dev-manifest }}
          IMAGE: ${{ needs.build.outputs.image }}
      - name: Post deploy failures to Slack
        if: failure()
        run: |
          curl -X POST --data "{\"text\": \"Deploy av $GITHUB_REPOSITORY til dev feilet - $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID\"}" $WEBHOOK_URL
        env:
          WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  deploy_prod:
    name: Deploy til ${{ inputs.prod-cluster }}
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 6
    steps:
      - uses: actions/checkout@v4

      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: ${{ inputs.prod-cluster }}
          RESOURCE: ${{ inputs.prod-manifest }}
          IMAGE: ${{ needs.build.outputs.image }}

      - name: Post deploy failures to Slack
        if: failure()
        run: |
          curl -X POST --data "{\"text\": \"Deploy av $GITHUB_REPOSITORY til prod feilet - $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID\"}" $WEBHOOK_URL
        env:
          WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  trivy-scan:
    name: Scan docker-image med Trivy
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write # to write sarif
      security-events: write # push sarif to github security
      id-token: write # for nais/login
    steps:
      - uses: actions/checkout@v4
      - uses: nais/login@v0
        with:
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          team: tilleggsstonader

      - name: Hent ned docker-image
        run: docker pull ${{ needs.build.outputs.image }}

      - name: Kjør Trivy sårbarhetssscanner
        uses: aquasecurity/trivy-action@master
        env:
          TRIVY_JAVA_DB_REPOSITORY: "public.ecr.aws/aquasecurity/trivy-java-db:1"
        with:
          image-ref: '${{ needs.build.outputs.image }}'
          format: 'sarif'
          output: 'trivy.sarif'
          severity: 'HIGH,CRITICAL'
          limit-severities-for-sarif: true

      - name: Last opp resultatet til GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy.sarif'